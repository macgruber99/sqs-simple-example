version: 3

output: prefixed

vars:

tasks:
  pre-commit:
    deps: [install-precommit]
    desc: Execute pre-commit
    summary: Execute all pre-commit hooks.
    cmds:
      - pre-commit run -a

  install-precommit:
    desc: Install pre-commit
    cmds:
      - pip install pre-commit
      - pre-commit install --install-hooks --hook-type pre-commit --hook-type commit-msg
    status:
      - command -v pre-commit
      - test -f .git/hooks/commit-msg
      - test -f .git/hooks/pre-commit
    silent: true

  unit-test:
    desc: Lambda unit tests
    summary: Execute unit tests for a Lambda function
    cmds:
      - poetry run pytest
    dir: '{{.USER_WORKING_DIR}}' # must 'cd' to Lambda dir first

  build:
    desc: Build Lambda packages
    summary: Build a ZIP archive package for each Lambda function.
    cmds:
      - poetry build-lambda
    dir: '{{.USER_WORKING_DIR}}' # must 'cd' to Lambda dir first

  plan:
    deps: [build]
    desc: Show planned deployment
    summary: Executes a 'terraform plan' to show what resources would be deployed.
    cmds:
      - terraform apply -auto-approve
    dir: terraform/

  deploy:
    deps: [build]
    desc: Deploy resources
    summary: Applies Terraform code to deploy Lambdas and other resources to AWS.
    cmds:
      - terraform apply -auto-approve
    dir: terraform/
